{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","sortByDefault","method","isReversedOrder","App","useState","sortBy","setSortBy","goods","list","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"wPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SACjBC,EAAgB,CACpBC,OAAQ,GACRC,iBAAiB,GA4BNC,EAAM,WACjB,MAA4BC,mBAASJ,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACMC,EA3BiB,SAACC,EAAD,GAAwC,IAA/BP,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBAClCO,EAAa,YAAOD,GAE1B,GAAIP,EACF,OAAQA,GACN,KAAMH,EACJW,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAEF,KAAMb,EACJU,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAYhE,OAJIZ,GACFO,EAAcM,UAGTN,EAKOO,CAAiBnB,EAAiBQ,GAEhD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAU,2BAAKD,GAAN,IAAcJ,OAAQH,MAC9CqB,KAAK,SACLF,UACEG,IACE,SACA,UACA,CACE,WAAYf,EAAOJ,SAAWH,IARtC,iCAeA,wBACEoB,QAAS,kBAAMZ,EAAU,2BAAKD,GAAN,IAAcJ,OAAQF,MAC9CoB,KAAK,SACLF,UACEG,IACE,SACA,aACA,CACE,WAAYf,EAAOJ,SAAWF,IARtC,4BAgBA,wBACEmB,QAAS,kBAAMZ,EACbD,EAAOH,gBAAP,2BACSG,GADT,IACiBH,iBAAiB,IADlC,2BAESG,GAFT,IAEiBH,iBAAiB,MAEpCiB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,YAAaf,EAAOH,kBAX1B,sBAkBEG,EAAOJ,QAAUI,EAAOH,kBACxB,wBACEgB,QAAS,kBAAMZ,EAAU,CACvBL,OAAQ,GACRC,iBAAiB,KAEnBiB,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGV,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.05470a7f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst sortByDefault = {\n  method: '',\n  isReversedOrder: false,\n};\n\nconst getPreparedGoods = (list, { method, isReversedOrder }) => {\n  const preparedGoods = [...list];\n\n  if (method) {\n    switch (method) {\n      case (SORT_BY_ALPHABET):\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n\n      case (SORT_BY_LENGTH):\n        preparedGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  if (isReversedOrder) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState(sortByDefault);\n  const goods = getPreparedGoods(goodsFromServer, sortBy);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortBy({ ...sortBy, method: SORT_BY_ALPHABET })}\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortBy.method !== SORT_BY_ALPHABET,\n              },\n            )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortBy({ ...sortBy, method: SORT_BY_LENGTH })}\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortBy.method !== SORT_BY_LENGTH,\n              },\n            )\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setSortBy(\n            sortBy.isReversedOrder\n              ? { ...sortBy, isReversedOrder: false }\n              : { ...sortBy, isReversedOrder: true },\n          )}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !sortBy.isReversedOrder,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortBy.method || sortBy.isReversedOrder) && (\n          <button\n            onClick={() => setSortBy({\n              method: '',\n              isReversedOrder: false,\n            })}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}